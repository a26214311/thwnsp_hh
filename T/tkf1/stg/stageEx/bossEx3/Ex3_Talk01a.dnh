#東方弾幕風[Single]

#ScriptVersion[3]

#Title["Ex道中　会話A"]

#Text["Ex道中　会話A"]

#Background[""]

#System["./../../../system/System_Main.dnh"]



//---------------------------------------------------------------------



// 関数取り込み

#include"./../../../lib/lib_boss.dnh"

#include"./../../../lib/lib_talk.dnh"

#include"./lib_Vinka.dnh"



// 各ボスのオブジェクトID

let objEnemy2;



@Event {

	alternative(GetEventType())

	case(EV_REQUEST_LIFE)		{ SetScriptResult( 0);	}

	case(EV_REQUEST_TIMER)		{ SetScriptResult(-1);	}

	BossEvent();

}



@Initialize {

	Boss_Init();	//初期設定

	objEnemy2 = CreateBossTalkEx(BOSS_ID_MINT);	// ザコ扱い

	objEnemy = CreateBossTalk(BOSS_ID_VINKA);	//ボスセット

	SetZanclaw(objEnemy2, 0);				//ザンクローセット

	Task_Main();

}



@MainLoop {

	yield;



}



// メインタスク

task Task_Main()

{

	// 魔法陣リセット

	BossEffect_ResetMagicCircle();



	// 会話準備

	StartTalk();



	//ボスネーム表示状態

	BossScene_SetNameVisible(objScene, false);



	wait(30);

	

	//会話処理

	FuncTalk();

	

	//次のシーンへ

	FinishTalk(true);

	Boss_Finalize(objEnemy2, false, false);

	Boss_Finalize(objEnemy, false, false);

	eAlive = false;

}



// 会話処理

function FuncTalk()

{

	// オブジェクト作成

	let cutinBoss1   = CreateTalkObject(BOSS_ID_VINKA, true);

	let cutinBoss2   = CreateTalkObject(BOSS_ID_MINT, true);

	let cutinPlayer1 = CreateTalkObject(BOSS_ID_REIMU, false);

	let cutinPlayer2 = CreateTalkObject(BOSS_ID_TOKUBI, false);

	

	// 画像ファイル

	let pathBoss1 = imgCharaVinka;

	let pathBoss2 = imgCharaMint;

	let pathPlayer1 = imgCharaReimu;

	let pathPlayer2 = imgCharaTokubi;

	

	// 隠す

	SetImageVisible(cutinBoss1, false);

	SetImageVisible(cutinBoss2, false);

	//ボスネーム表示状態

	BossScene_SetNameVisible(objScene, false);

	// 初期顔グラ

	ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[5]);

	// 最初に前に出てくるキャラ

	SetImageFoward(cutinPlayer1, true);

	wait(15);

	

	let talkID = 0;

	loop

	{

		let talkType = FuncTalkSingle(talkID);

		if (talkType == 0) { break; }

		talkID = max(0, talkID+WaitNext());

	}



	// 会話処理単発（巻き戻しも出来るように）

	function FuncTalkSingle(talkID)

	{

		let xIni = CenX;

		let yIni = 140;

		

		let talk_type = 1;

		alternative(talkID)

		case(0)

		{

			ObjPrim_SetTexture(cutinBoss1,   pathBoss1[2]);

			ObjPrim_SetTexture(cutinBoss2,   pathBoss2[2]);

			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[5]);

			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);

			SetTalkEx(cutinPlayer1, "所以呢？为什么我非要[r]陪你一起去报告啊！");

		}

		case(1)

		{

			BossScene_SetNameVisible(objScene, false);	//ボスネーム表示状態

			SetImageVisible(cutinBoss1, false);	// ボス画像出現フラグ

			SetImageVisible(cutinBoss2, false);



			ObjPrim_SetTexture(cutinBoss1,   pathBoss1[2]);

			ObjPrim_SetTexture(cutinBoss2,   pathBoss2[2]);

			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[5]);

			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[4]);

			SetTalkEx(cutinPlayer2, "因为这次的事相当复杂，[r]所以需要证人啊。");

		}

		case(2)

		{

			EnterBoss(objEnemy, xIni+80, yIni);



			SetImageVisible(cutinBoss1, true);	// ボス画像出現フラグ

			SetImageVisible(cutinBoss2, false);



			ObjPrim_SetTexture(cutinBoss1,   pathBoss1[2]);

			ObjPrim_SetTexture(cutinBoss2,   pathBoss2[2]);

			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);

			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);

			SetTalkEx(cutinBoss1, "好像是挺有趣的话题呢，[r]让我们也加入吧。");

		}

		case(3)

		{

			EnterBoss2(objEnemy2, xIni-80, yIni);

			SetBossNameEx(cutinBoss2, 520, 180, objEnemy2);	// ボスネーム表示

			SetBossNameEx(cutinBoss1, 300, 120, objEnemy);	// ボスネーム表示



			BossScene_SetNameVisible(objScene, true);	//ボスネーム表示状態

			SetImageVisible(cutinBoss1, true);	// ボス画像出現フラグ

			SetImageVisible(cutinBoss2, true);



			ObjPrim_SetTexture(cutinBoss1,   pathBoss1[2]);

			ObjPrim_SetTexture(cutinBoss2,   pathBoss2[3]);

			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);

			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);

			SetTalkEx(cutinBoss2, "这个国家的植物之神在这里的吧？[r]无论如何都想见上一面啊。");

		}

		case(4)

		{

			ObjPrim_SetTexture(cutinBoss1,   pathBoss1[2]);

			ObjPrim_SetTexture(cutinBoss2,   pathBoss2[3]);

			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);

			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);

			SetTalkEx(cutinPlayer1, "看来连奇怪的家伙都上船来了呢。");

		}

		case(5)

		{

			ObjPrim_SetTexture(cutinBoss1,   pathBoss1[2]);

			ObjPrim_SetTexture(cutinBoss2,   pathBoss2[3]);

			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);

			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[4]);

			SetTalkEx(cutinPlayer2, "天鸟船大人对乘客不加筛选吗，[r]真是白玉微瑕。");

		}

		case(6)

		{

			ObjPrim_SetTexture(cutinBoss1,   pathBoss1[4]);

			ObjPrim_SetTexture(cutinBoss2,   pathBoss2[2]);

			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);

			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[3]);

			SetTalkEx(cutinPlayer2, "嘛，只要我们出手把她们赶下船，问题就解决了。");

		}

		case(7)

		{

			ObjPrim_SetTexture(cutinBoss1,   pathBoss1[6]);

			ObjPrim_SetTexture(cutinBoss2,   pathBoss2[2]);

			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);

			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[3]);

			SetTalkEx(cutinBoss1, "喂喂，你这分明是要找茬的态度吧！？");

		}

		case(8)

		{

			ObjPrim_SetTexture(cutinBoss1,   pathBoss1[6]);

			ObjPrim_SetTexture(cutinBoss2,   pathBoss2[4]);

			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[2]);

			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[3]);

			SetTalkEx(cutinBoss2, "给我冷静下来。");

		}

		case(9)

		{

			ObjPrim_SetTexture(cutinBoss1,   pathBoss1[3]);

			ObjPrim_SetTexture(cutinBoss2,   pathBoss2[4]);

			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[2]);

			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[3]);

			SetTalkEx(cutinBoss1, "冷静许多了＾＾");

		}

		others

		{

			return(0);

		}

		return(talk_type);

	}

}



task EnterBoss(objEnemy, xIni, yIni)

{

	if (Obj_GetValueD(objEnemy, "BOSS_MOVED", false)) { return; }

	Obj_SetValue(objEnemy, "BOSS_MOVED", true);

	

	ObjMove_SetPosition(objEnemy, CenX+64, -128);

	SetMovePositionHermite(objEnemy, xIni-32, yIni+64,

		600, 180, 300, 90, 65);

	SetAction(objEnemy, ACT_MOVE_L, 65);

	wait(70);

	SetMovePositionHermite(objEnemy, xIni, yIni,

		100, -90, 50, 90, 30);

	SetAction(objEnemy, ACT_MOVE_R, 30);

}

task EnterBoss2(objEnemy2, xIni, yIni)

{

	if (Obj_GetValueD(objEnemy2, "BOSS_MOVED", false)) { return; }

	Obj_SetValue(objEnemy2, "BOSS_MOVED", true);

	

	ObjMove_SetPosition(objEnemy2, CenX-96, -128);

	SetMovePositionHermite(objEnemy2, xIni, yIni,

		200, 180, 0, 0, 90);

	SetAction(objEnemy2, ACT_MOVE_L, 90);

}

