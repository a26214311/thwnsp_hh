//#東方弾幕風[Single]

#ScriptVersion[3]

#Title["2面道中　会話"]

#Text["2面道中　会話"]

#Background[""]

#System["./../../../system/System_Main.dnh"]



//---------------------------------------------------------------------



// 関数取り込み

#include"./../../../lib/lib_boss.dnh"

#include"./../../../lib/lib_talk.dnh"



@Event {

	alternative(GetEventType())

	case(EV_REQUEST_LIFE)		{ SetScriptResult( 0);	}

	case(EV_REQUEST_TIMER)		{ SetScriptResult(-1);	}

	BossEvent();

}



@Initialize {

	Boss_Init();	//初期設定

	objEnemy = CreateBossTalk(BOSS_ID_SASHA);	//ボスセット

	Task_Main();

}



@MainLoop {

	yield;



}



// メインタスク

task Task_Main()

{

	// 魔法陣リセット

	BossEffect_ResetMagicCircle();



	// 会話準備

	StartTalk();



	wait(30);



	// 登場モーション

	let xIni = CenX;

	let yIni = 160;

	SashaFadeIn(xIni, yIni, 90);

	BossEffect_AuraSasha(objEnemy, 0);

	CallSound(sndBoon);

	wait(150);

	

	//会話処理

	FuncTalk();

	

	//次のシーンへ

	FinishTalk(true);

	Boss_Finalize(objEnemy, false, false);

}



// 会話処理

function FuncTalk()

{

	// オブジェクト作成

	let cutinBoss1   = CreateTalkObject(BOSS_ID_SASHA, true);

	let cutinPlayer1 = CreateTalkObject(BOSS_ID_SANAE, false);

	let cutinPlayer2 = CreateTalkObject(BOSS_ID_MINAYU, false);

	

	// 画像ファイル

	let pathBoss1 = imgCharaSasha;

	let pathPlayer1 = imgCharaSanae;

	let pathPlayer2 = imgCharaMinayu;

	

	SetImageFoward(cutinBoss1, true);

	wait(15);

	

	let talkID = 0;

	loop

	{

		let talkType = FuncTalkSingle(talkID);

		if (talkType == 0) { break; }

		talkID = max(0, talkID+WaitNext());

		

		//オーラどぴゅーん！

		if (talkID == 6 && !Obj_GetValueD(objEnemy, "AURA_FLAG", false))

		{

			BossEffect_AuraSasha(objEnemy, 1);

			CallSound(sndBoon);

			wait(60);

		}

	}



	// 会話処理単発（巻き戻しも出来るように）

	function FuncTalkSingle(talkID)

	{

		let talk_type = 1;

		alternative(talkID)

		case(0)

		{

			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);

			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[2]);

			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);

			SetTalkEx(cutinBoss1, "哦——，是守矢啊，好久不见。");

			SetBossName(cutinBoss1, 280, 220);	// ボスネーム表示

		}

		case(1)

		{

			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);

			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);

			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);

			SetTalkEx(cutinPlayer1, "你是！咦是谁来着？");

		}

		case(2)

		{

			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);

			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);

			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);

			SetTalkEx(cutinPlayer2, "这种力量是……被遗忘的存在！？");

		}

		case(3)

		{

			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);

			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);

			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);

			SetTalkEx(cutinBoss1, "真罗嗦真罗嗦！[r]我可是一直自豪于没被人遗忘的！");

		}

		case(4)

		{

			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);

			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);

			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[5]);

			SetTalkEx(cutinPlayer2, "你这圈子也很不容易呢。");

		}

		case(5)

		{

			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);

			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);

			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[5]);

			SetTalkEx(cutinBoss1, "生气了哦！[r]让妾身的影子把你们击溃吧！");

			SetFukidashiType(cutinBoss1, FUKIDASHI_ANGER);

		}

		others

		{

			return(0);

		}

		return(talk_type);

	}

}





// 前面のオーラ（登場時）

task SashaFadeIn(x, y, timer)

{

	ObjMove_SetPosition(objEnemy, x, y);

	

	ascent(t in 0 .. timer)

	{

		// 本体の透明度

		let tmp_ba = max(0, min(1, (t+1)/timer*2-1)) * 255;

		ObjRender_SetAlpha(GetBossImageID(objEnemy), tmp_ba);

		yield;

	}

}

